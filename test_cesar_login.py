#!/usr/bin/env python3
"""
Teste de login do usu√°rio C√©sar no servidor local
"""

import requests
import json

def test_cesar_login():
    """Testar login do C√©sar no servidor local e produ√ß√£o"""
    
    # URLs de teste
    urls = {
        'LOCAL': 'http://localhost:8000/api/auth/login',
        'PRODU√á√ÉO': 'https://backend-painel-universal-production.up.railway.app/api/auth/login'
    }
    
    data = {'cpf': '06601206156', 'senha': '101112'}

    for env, url in urls.items():
        print(f'\nüîë Testando login {env} com usu√°rio C√©sar admin...')
        try:
            response = requests.post(url, json=data, timeout=15)
            print(f'Status: {response.status_code}')
            
            if response.status_code == 200:
                result = response.json()
                print(f'‚úÖ LOGIN SUCESSO em {env}!')
                print('üìã Dados do usu√°rio:')
                if 'usuario' in result:
                    usuario = result['usuario']
                    print(f'   ID: {usuario.get("id")}')
                    print(f'   Nome: {usuario.get("nome")}')
                    print(f'   CPF: {usuario.get("cpf")}')
                    print(f'   Tipo: {usuario.get("tipo")}')
                    print(f'   Tipo_usuario: {usuario.get("tipo_usuario")}')
                    
                    # Verificar se √© admin
                    tipo = usuario.get("tipo") or usuario.get("tipo_usuario")
                    if tipo == "admin":
                        print(f'üéâ CONFIRMADO: Usu√°rio √© ADMIN em {env}!')
                    else:
                        print(f'‚ö†Ô∏è Usu√°rio n√£o √© admin em {env}: {tipo}')
                else:
                    print('‚ùå Campo usuario n√£o encontrado na resposta')
                    print(f'Resposta completa: {result}')
            else:
                print(f'‚ùå Erro no login {env}: {response.text}')
                
        except requests.exceptions.ConnectionError:
            print(f'‚ùå Servidor {env} n√£o est√° acess√≠vel.')
            if env == 'LOCAL':
                print('üí° Para iniciar: cd backend && python -m uvicorn app.main:app --reload --port 8000')
        except Exception as e:
            print(f'‚ùå Erro {env}: {e}')

if __name__ == "__main__":
    test_cesar_login()
