# Multi-stage build optimized for Railway
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with production optimizations
RUN npm ci --no-audit --no-fund --prefer-offline

# Copy source code
COPY . .

# Build arguments for Railway
ARG RAILWAY_ENVIRONMENT
ARG VITE_API_URL
ARG VITE_MEEP_API_URL
ARG VITE_WS_URL

# Set default URLs if not provided
ENV VITE_API_URL=${VITE_API_URL:-https://backend-painel-universal-production.up.railway.app}
ENV VITE_MEEP_API_URL=${VITE_MEEP_API_URL:-https://meep-service-production.up.railway.app}
ENV VITE_WS_URL=${VITE_WS_URL:-wss://backend-painel-universal-production.up.railway.app}
ENV NODE_ENV=production

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx user and set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Use PORT environment variable from Railway
ENV PORT=3000
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:$PORT/health || exit 1

# Start nginx
CMD ["sh", "-c", "sed -i 's/listen 3000/listen $PORT/g' /etc/nginx/nginx.conf && nginx -g 'daemon off;'"]
